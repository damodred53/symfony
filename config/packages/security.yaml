security:
    password_hashers:
        App\Entity\User: 
            algorithm: auto

    providers:
        app_user_provider:
            entity:
                class: App\Entity\User
                property: username

    firewalls:
        
        
        login:
            pattern: ^/api/login
            stateless: true
            json_login:
                check_path: /api/login
                username_path: username
                password_path: password
                success_handler: lexik_jwt_authentication.handler.authentication_success
                failure_handler: lexik_jwt_authentication.handler.authentication_failure
        
        
        service_api:
            pattern: ^/api
            stateless: true
            custom_authenticators:
                - App\Security\ApiTokenAuthenticator
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false


        api:
            pattern: ^/api
            stateless: true
            jwt: ~

    access_control:
        - { path: ^/api/login, roles: PUBLIC_ACCESS }
        - {path: ^/api/doc, roles: PUBLIC_ACCESS}
        - { path: ^/api/jwt, roles: [IS_AUTHENTICATED_FULLY, ROLE_API] }
        - {path: ^/api/jwt/token/add, 
              roles: ROLE_ADMIN }
        - { path: ^/api, roles: ROLE_API }
